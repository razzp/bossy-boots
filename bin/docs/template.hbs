# Bossy Boots

Bossy Boots is a helpful collection of type guards and assertions, written in TypeScript.

## Contents

<ul>
  <li><a href="#overview">Overview</a></li>
  <li><a href="#installation">Installation</a></li>
  <li><a href="#usage">Usage</a></li>
  {{> navitem name="API" members=api}}
</ul>

## Overview

The benefits of using Bossy Boots include a more robust runtime and less repetitious logic in your code. With type definitions included out the box, TypeScript environments (especially those in strict mode) will benefit even further with accurate type inference and narrowing.

The bulk of Bossy Boots is made up of **assertions** and **guards** that take a value and check if it matches one or more predicates. The most important distinction between the two is that **assertions** will `throw` if the check fails, whereas **guards** will return a `boolean` instead, allowing you implement your own handling logic. Most **assertions** have (and use) **guard** counterparts.

## Installation

```shell
npm i bossy-boots
```

## Usage

Bossy Boots is completely modular and compatible with both ESM and CommonJS environments.

```javascript
// ESM
import { ... } from 'bossy-boots';

// CommonJS
const { ... } = require('bossy-boots');
```

<h2 id="API">API</h2>

{{#each api}}
{{> member}}
{{/each}}